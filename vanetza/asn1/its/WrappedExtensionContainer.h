/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "CAM-PDU-Description"
 * 	found in "asn1/CAM-PDU-Descriptions.asn"
 * 	`asn1c -fcompound-names -fincludes-quoted -no-gen-example -R`
 */

#ifndef	_WrappedExtensionContainer_H_
#define	_WrappedExtensionContainer_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NativeInteger.h"
#include "TwoWheelerContainer.h"
#include "EHorizonLocationSharingContainer.h"
#include "VeryLowFrequencyContainer.h"
#include "PathPredictionContainer.h"
#include "GeneralizedLanePositionsContainer.h"
#include "VehicleMovementControlContainer.h"
#include "constr_CHOICE.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum WrappedExtensionContainer__containerData_PR {
	WrappedExtensionContainer__containerData_PR_NOTHING,	/* No components present */
	WrappedExtensionContainer__containerData_PR_twoWheelerContainer,
	WrappedExtensionContainer__containerData_PR_eHorizonLocationSharingContainer,
	WrappedExtensionContainer__containerData_PR_veryLowFrequencyContainer,
	WrappedExtensionContainer__containerData_PR_pathPredictionContainer,
	WrappedExtensionContainer__containerData_PR_generalizedLanePositionsContainer,
	WrappedExtensionContainer__containerData_PR_vehicleMovementControlContainer
	/* Extensions may appear below */
	
} WrappedExtensionContainer__containerData_PR;

/* WrappedExtensionContainer */
typedef struct WrappedExtensionContainer {
	long	 containerId;
	struct WrappedExtensionContainer__containerData {
		WrappedExtensionContainer__containerData_PR present;
		union WrappedExtensionContainer__containerData_u {
			TwoWheelerContainer_t	 twoWheelerContainer;
			EHorizonLocationSharingContainer_t	 eHorizonLocationSharingContainer;
			VeryLowFrequencyContainer_t	 veryLowFrequencyContainer;
			PathPredictionContainer_t	 pathPredictionContainer;
			GeneralizedLanePositionsContainer_t	 generalizedLanePositionsContainer;
			VehicleMovementControlContainer_t	 vehicleMovementControlContainer;
			/*
			 * This type is extensible,
			 * possible extensions are below.
			 */
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} containerData;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} WrappedExtensionContainer_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_WrappedExtensionContainer;
extern asn_SEQUENCE_specifics_t asn_SPC_WrappedExtensionContainer_specs_1;
extern asn_TYPE_member_t asn_MBR_WrappedExtensionContainer_1[2];

#ifdef __cplusplus
}
#endif

#endif	/* _WrappedExtensionContainer_H_ */
#include "asn_internal.h"
